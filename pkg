#!/bin/sh
#
# Utility to interface with multiple distribution package managers.
#
# Currently supported package managers:
#   apt-get
#   dnf
#   pacman
#   apk

if [ "${DEBUG}" = "1" ]; then
    export PS4='+( ${0}:${LINENO} ): ${FUNCNAME:+${FUNCNAME}(): }'
    set -x
fi

####### region INTERNAL_VARS #######

_PKG_MANAGER_install=
_PKG_MANAGER_remove=

####### endregion INTERNAL_VARS #######

#
#
#

####### region INTERNAL_FUNCTIONS #######

# Setup the initramfs in the current rootfs.
# Is redeclared depending of the package manager, with a noop declaration as fallback.
#
# Arguments:
#   $1 - The path to the initramfs image file.
#
# Usage:
#   _pkg_setupinitramfs /path/to/initramfs.img
_pkg_setupinitramfs() {
    echo >&2 "ERROR: To be implemented"
    return 1
}

####### endregion INTERNAL_FUNCTIONS #######

#
#
#

####### region Collect input #######

# Possible values:
#   install
#   remove
#   setup-initramfs
_command=$1
shift 2>/dev/null || {
    echo >&2 "ERROR: missing args"
    exit 1
}
_args=$*

####### endregion Collect input #######

#
#

####### region Detect package manager #######

if [ -x "$(command -v apt-get)" ]; then

    echo >&2 "Package manager identified: apt-get"
    _PKG_MANAGER_install="apt-get install -q -y"
    _PKG_MANAGER_remove="apt-get remove -q -y"

elif [ -x "$(command -v dnf)" ]; then

    echo >&2 "Package manager identified: dnf"
    _PKG_MANAGER_install="dnf install -yq"
    _PKG_MANAGER_remove="dnf remove -yq"
    _pkg_setupinitramfs() {
        _initramfs_path="${1:?}"
        $_PKG_MANAGER_install dracut-live
        _INSTALLED_KERNEL=$(rpm -q kernel-core --queryformat "%{evr}.%{arch}" | tail -n 1)
        mkdir -p "$(realpath /root)"
        export DRACUT_NO_XATTR=1
        dracut --zstd --reproducible --no-hostonly --kver "$_INSTALLED_KERNEL" \
            --add "dmsquash-live dmsquash-live-autooverlay" \
            --force "$_initramfs_path" 2>&1 | grep -v -e "Operation not supported"
        unset -v _INSTALLED_KERNEL
    }

elif [ -x "$(command -v pacman)" ]; then

    echo >&2 "Package manager identified: pacman"
    _PKG_MANAGER_install="pacman -S --noconfirm"
    _PKG_MANAGER_remove="pacman -Rs --noconfirm"

elif [ -x "$(command -v apk)" ]; then

    echo >&2 "Package manager identified: apk"
    _PKG_MANAGER_install="apk add -q --no-cache --no-progress"
    _PKG_MANAGER_remove="apk del -q --no-cache --no-progress"

# TODO: Add more

else
    echo >&2 "ERROR: no supported package manager found"
    exit 1
fi

####### endregion Detect package manager #######

# shellcheck disable=SC2086
if [ "$_command" = "install" ]; then

    $_PKG_MANAGER_install $_args

elif [ "$_command" = "remove" ]; then

    $_PKG_MANAGER_remove $_args

elif [ "$_command" = "setup-initramfs" ]; then

    _pkg_setupinitramfs $_args

else
    echo >&2 "ERROR: unknown command"
    exit 1
fi
